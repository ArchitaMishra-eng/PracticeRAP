FUNCTION z_edi856_pgicheck_fm.
*"----------------------------------------------------------------------
*"*"Local Interface:
*"  IMPORTING
*"     REFERENCE(OBJTYPE) LIKE  SWETYPECOU-OBJTYPE
*"     REFERENCE(OBJKEY) LIKE  SWEINSTCOU-OBJKEY
*"     REFERENCE(EVENT) LIKE  SWETYPECOU-EVENT
*"     REFERENCE(RECTYPE) LIKE  SWETYPECOU-RECTYPE
*"  TABLES
*"      EVENT_CONTAINER STRUCTURE  SWCONT
*"  EXCEPTIONS
*"      ANY_EXCEPTION
*"----------------------------------------------------------------------
  CONSTANTS : lc_i0911_likp_kunnr_shipto TYPE string VALUE 'I0911_LIKP_KUNNR_SHIPTO',
              lc_i0911_likp_gbstk_status TYPE string VALUE 'I0911_LIKP_GBSTK_STATUS',
              lc_i0911_plant             TYPE string VALUE 'PLANT_I0911',
              c_subobject                TYPE balsubobj VALUE 'I0911',
              c_fm                       TYPE rs38l_fnam VALUE 'Z_EDI856_PGICHECK_FM'.

  DATA : lo_obj TYPE REF TO zcl_event_mesh_util,
         lv_txt TYPE string.

  DATA : lv_kunnr TYPE likp-kunnr,
         lv_gbstk TYPE likp-gbstk,
         lv_plant TYPE likp-werks.
*---------------------------End Of Declaration-----------------------------------------------------------------
  " Log Success / Error messages to SLG1
  lo_obj =  NEW zcl_event_mesh_util( im_subobject = c_subobject
                                      im_objkey    = CONV #( objkey ) ).
  " Begin of processing FM
  lo_obj->begin_process_log(
    EXPORTING
      im_fm      =  c_fm
      im_objtype =  objtype
      im_event   =  event   ).

  " ** number range to get current catalogue number
  SELECT name,
         low
    FROM zz1_constantvaluetable
      INTO TABLE @DATA(lt_constantvalue)
    WHERE name = @lc_i0911_likp_kunnr_shipto
        OR name = @lc_i0911_likp_gbstk_status.

  IF lt_constantvalue IS NOT INITIAL.

    SELECT name,
         low
    FROM zz1_constantvaluetable
      INTO TABLE @DATA(lt_plant)
    WHERE name = @lc_i0911_plant.


    lv_kunnr = VALUE #( lt_constantvalue[ name = lc_i0911_likp_kunnr_shipto ]-low OPTIONAL ).
    lv_gbstk = VALUE #( lt_constantvalue[ name = lc_i0911_likp_gbstk_status ]-low OPTIONAL ).
    lv_plant = VALUE #( lt_plant[ name = lc_i0911_plant ]-low OPTIONAL ).

    SELECT SINGLE
      vbeln,
      kunnr,
      gbstk,
      werks
    FROM likp WHERE  vbeln = @objkey AND kunnr = @lv_kunnr AND  gbstk = @lv_gbstk INTO @DATA(ls_data).
  ELSE.
    lv_txt = TEXT-001. " No Constants maintained for Variables 'I0911_LIKP_KUNNR_SHIPTO','I0911_LIKP_GBSTK_STATUS'
    lo_obj->add_msg(
      EXPORTING
        iv_text  = lv_txt
        iv_msgty =  'E'
    ).
    DATA(lv_event_suppress) = abap_true.

  ENDIF.

  IF  ls_data IS NOT INITIAL AND ls_data-werks EQ lv_plant.
  ELSE.
    lv_txt = TEXT-002. " No prcessing status maintained for Customer
    lo_obj->add_msg(
      EXPORTING
        iv_text  = lv_txt
        iv_msgty =  'E'
    ).
    lv_event_suppress = abap_true.
*    RAISE any_exception .
    IF lv_event_suppress = abap_true.
      " Store msg in SLG1 for event suppress
      lo_obj->event_suppressed_by_check_fm( ).
      lo_obj->end_procss_logs(
      EXPORTING
        im_fm      =  c_fm
        im_objtype =  objtype
        im_event   =  event ).
      " Save the log
      lo_obj->save_logs( ).
      RAISE exception.
    ELSE.
      " Store msg in SLG1 for event trigger is passed to Queue
      lo_obj->event_passed_to_queue( ).
      " End of processing FM
      lo_obj->end_procss_logs(
      EXPORTING
        im_fm      =  c_fm
        im_objtype =  objtype
        im_event   =  event ).
      lo_obj->save_logs( ).
    ENDIF.
  ENDIF.

ENDFUNCTION.
